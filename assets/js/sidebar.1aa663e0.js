(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["sidebar"],{

/***/ "./src/scripts/sidebar.js":
/*!********************************!*\
  !*** ./src/scripts/sidebar.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// const body = document.body\n//\n// const sidebar = body.querySelector('#sidebar')\n// const expandButton = body.querySelector('#sidebar-toggler')\n// const overlay = body.querySelector('.sidebar-overlay')\n// const sidebarMenu = body.querySelector('#sidebar-menu')\n//\n// const collapseButton = expandButton.cloneNode(true)\n// collapseButton.setAttribute('id', '#sidebar-collapse')\n//\n// const setAriaExpanded = (items, value) => {\n//   items.forEach(item => item.setAttribute('aria-expanded', value))\n// }\n//\n// const hideSidebar = () => {\n//   sidebar.classList.remove('toggled')\n//   setAriaExpanded([sidebar, expandButton, collapseButton], false)\n// }\n//\n// const showSidebar = () => {\n//   sidebar.classList.add('toggled')\n//   setAriaExpanded([sidebar, expandButton, collapseButton], true)\n//   sidebar.focus()\n// }\n//\n// let windowWidth,\n//   windowHeight,\n//   bodyHeight,\n//   sidebarHeight,\n//   windowPos,\n//   lastWindowPos = 0,\n//   top = false,\n//   bottom = false,\n//   topOffset = 0,\n//   sidebarOffsetTop,\n//   resizeTimer\n//\n// const resizeHandler = () => {\n//   windowWidth = window.innerWidth\n//   windowHeight = window.innerHeight\n// }\n//\n// const scrollHandler = () => {\n//   windowPos = window.scrollY\n//   bodyHeight = body.offsetHeight\n//   sidebarHeight = sidebar.offsetHeight\n//   sidebarOffsetTop = Math.round(windowPos + sidebar.getBoundingClientRect().top)\n//\n//   if (sidebarHeight > windowHeight) {\n//     if (windowPos > lastWindowPos) {\n//       if (top) {\n//         top = false\n//         topOffset = sidebarOffsetTop > 0 ? sidebarOffsetTop : 0\n//         sidebar.setAttribute('style', `top: ${topOffset}px;`)\n//       } else if (\n//         !bottom &&\n//         windowPos + windowHeight > sidebarHeight + sidebarOffsetTop &&\n//         sidebarHeight < bodyHeight\n//       ) {\n//         bottom = true\n//         sidebar.setAttribute('style', 'position: fixed; bottom: 0;')\n//       }\n//     } else if (windowPos < lastWindowPos) {\n//       if (bottom) {\n//         bottom = false\n//         topOffset = sidebarOffsetTop > 0 ? sidebarOffsetTop : 0\n//         sidebar.setAttribute('style', `top: ${topOffset}px;`)\n//       } else if (!top && windowPos < sidebarOffsetTop) {\n//         top = true\n//         sidebar.setAttribute('style', 'position: fixed;')\n//       }\n//     } else {\n//       top = bottom = false\n//       topOffset = sidebarOffsetTop ? sidebarOffsetTop : 0\n//       sidebar.setAttribute('style', `top: ${topOffset}px;`)\n//     }\n//   } else if (!top) {\n//     top = true\n//     sidebar.setAttribute('style', 'position: fixed;')\n//   }\n//\n//   lastWindowPos = windowPos\n// }\n//\n// const resizeAndScrollHandler = () => {\n//   resizeHandler()\n//   scrollHandler()\n// }\n//\n// const initSidebarMenu = () => {\n//   let itemsWithSubmenu = sidebarMenu.querySelectorAll('.item.has-children')\n//\n//   itemsWithSubmenu.forEach(item => {\n//     let toggler = item.querySelector('button')\n//     let submenu = item.querySelector('.sub-menu')\n//\n//     setAriaExpanded([submenu, toggler], false)\n//\n//     toggler.addEventListener('click', () => {\n//       let toggled = item.classList.contains('toggled')\n//\n//       item.classList[toggled ? 'remove' : 'add']('toggled')\n//       setAriaExpanded([submenu, toggler], !toggled)\n//     })\n//   })\n// }\n//\n// export const initSidebar = () => {\n//   sidebar.setAttribute('tabindex', '-1')\n//   sidebar.insertBefore(collapseButton, sidebar.children[1])\n//\n//   setAriaExpanded([sidebar, expandButton, collapseButton], false)\n//\n//   expandButton.addEventListener('click', showSidebar)\n//   collapseButton.addEventListener('click', hideSidebar)\n//   overlay.addEventListener('click', hideSidebar)\n//\n//   window.addEventListener('scroll', scrollHandler)\n//   window.addEventListener('resize', () => {\n//     clearTimeout(resizeTimer)\n//     resizeTimer = setTimeout(resizeAndScrollHandler, 500)\n//   })\n//\n//   resizeAndScrollHandler()\n//\n//   if (sidebarMenu) initSidebarMenu()\n// }\n\n\n//# sourceURL=webpack:///./src/scripts/sidebar.js?");

/***/ })

}]);